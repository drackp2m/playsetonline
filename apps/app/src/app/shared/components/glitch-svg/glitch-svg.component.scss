@use 'sass:math';

$glitch-steps: 14;
$glitch-duration: calc(var(--glitch-duration) * 1s);

@keyframes glitch-left {
	@for $i from 0 through $glitch-steps {
		#{percentage($i * calc(1 / $glitch-steps))} {
			$top: var(--left-top-frame-#{$i});
			$bottom: var(--left-bottom-frame-#{$i});

			$top-with-percent: calc($top * 1%);
			$bottom-with-percent: calc((100 - $bottom) * 1%);

			clip-path: inset(#{$top-with-percent} 0 #{$bottom-with-percent} 0);
		}
	}
}

@keyframes glitch-right {
	@for $i from 0 through $glitch-steps {
		#{percentage($i * calc(1 / $glitch-steps))} {
			$top: var(--right-top-frame-#{$i});
			$bottom: var(--right-bottom-frame-#{$i});

			$top-with-percent: calc($top * 1%);
			$bottom-with-percent: calc((100 - $bottom) * 1%);

			clip-path: inset(#{$top-with-percent} 0 #{$bottom-with-percent} 0);
		}
	}
}

@keyframes glitch-overlap {
	@for $i from 0 through $glitch-steps {
		#{percentage($i * calc(1 / $glitch-steps))} {
			$top: var(--overlap-top-frame-#{$i});
			$bottom: var(--overlap-bottom-frame-#{$i});

			$top-with-percent: calc($top * 1%);
			$bottom-with-percent: calc((100 - $bottom) * 1%);

			clip-path: inset(#{$top-with-percent} 0 #{$bottom-with-percent} 0);
		}
	}
}

.glitch {
	$offset: calc(var(--glitch-offset) * 1px);
	$left-filter: hue-rotate(calc(360 / 3) * 1deg) brightness(140%);
	$right-filter: hue-rotate(calc(360 / 3) * 2deg) brightness(140%);

	position: relative;
	height: 100%;
	padding: 0 $offset;

	> img {
		height: 100%;
	}

	.left,
	.right,
	.overlap,
	.outside,
	.inside {
		position: absolute;
		top: 0;
		width: 100%;
		height: 100%;

		img {
			position: absolute;
		}
	}

	.mask {
		mask-repeat: no-repeat;
	}

	.overlap {
		z-index: 3;
		left: $offset;
		animation: glitch-overlap $glitch-duration infinite linear alternate-reverse;

		img {
			&.mask {
				left: $offset;

				mask-position: calc($offset * -2) center;
			}

			&.filter {
				left: 0;
				filter: $right-filter;

				mask-position: $offset center;
			}
		}
	}

	.left {
		z-index: 1;
		left: 0;
		animation: glitch-left $glitch-duration infinite linear alternate-reverse;

		.outside {
			img {
				filter: $left-filter !important;
			}
		}

		.inside {
			left: calc($offset);

			img {
				&.mask {
					mask-position: calc($offset * -1) center;
				}

				&.filter {
					filter: $right-filter !important;
				}
			}
		}
	}

	.right {
		z-index: 2;
		animation: glitch-right $glitch-duration infinite linear alternate-reverse;

		.outside {
			left: $offset;

			img {
				filter: $right-filter !important;
			}
		}

		.inside {
			img {
				&.mask {
					right: $offset;

					mask-position: calc($offset * -1) center;
				}

				&.filter {
					filter: $left-filter !important;
				}
			}
		}
	}

	&:not(:hover, :active) {
		.left,
		.right,
		.overlap {
			display: none;
		}
	}
}
