@use 'sass:meta';
@use 'sass:map';

@use '../abstracts/mixins' as mix;
@use '../abstracts/variables' as var;

@font-face {
	font-family: Recursive;
	src: url('/assets/fonts/recursive/latin_basic.woff2') format('woff2-variations');
}

$text-align: (
	text-left: (
		text-align: left,
	),
	text-center: (
		text-align: center,
	),
	text-right: (
		text-align: right,
	),
	text-justify: (
		text-align: justify,
	),
);

@function get-list($items, $rules-getter: get-rules) {
	$rules: ();

	@each $name in map.keys($items) {
		$rules-list: meta.call(meta.get-function($rules-getter), $name);

		$rules: map.merge($rules, $rules-list);
	}

	@return $rules;
}

@function get-rules($name) {
	@return (size-#{$name}: (font-size: var(--font-size-#{$name})));
}

@function get-weight-rules($name) {
	@return (weight-#{$name}: (font-weight: var(--font-weight-#{$name})));
}

@function get-oblique-rules($name) {
	@return (oblique-#{$name}: (font-style: oblique calc(var(--font-oblique-#{$name}) * 1deg)));
}

@function get-monospace-rules($name) {
	@return (mono-#{$name}: (font-variation-settings: 'MONO' var(--font-monospace-#{$name})));
}

@function get-casual-rules($name) {
	@return (casual-#{$name}: (font-variation-settings: 'CASL' var(--font-casual-#{$name})));
}

@include mix.generate-responsive($text-align);

@include mix.generate-responsive(get-list(var.$font-sizes));

@include mix.generate-responsive(get-list(var.$font-weights, get-weight-rules));

@include mix.generate-responsive(get-list(var.$font-obliques, get-oblique-rules));

@include mix.generate-responsive(get-list(var.$font-monospaces, get-monospace-rules));

@include mix.generate-responsive(get-list(var.$font-casuals, get-casual-rules));
